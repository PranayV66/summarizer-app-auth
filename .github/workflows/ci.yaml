name: Publish to ECR
on:
  push:
    branches:
      - k8s
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          mask-password: true

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPO_NAME }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Set up Helm
        uses: azure/setup-helm@v4.2.0
        with:
          version: v3.10.0

      - name: Helm Dependencies Update
        run: helm dependency update ./charts/auth

      - name: Deploy Helm Chart
        env:
          APP_SECRET_KEY: ${{ secrets.APP_SECRET_KEY }}
          SQL_USER: ${{ secrets.SQL_USER }}
          SQL_PASSWORD: ${{ secrets.SQL_PASSWORD }}
          SQL_DB: ${{ secrets.SQL_DB }}
          APP_DOMAIN: ${{ secrets.APP_DOMAIN }}
        run: |
          helm upgrade --install auth ./charts/auth \
            --set image.tag=${{ github.sha }} \
            --set secrets.appSecretKey="${APP_SECRET_KEY}" \
            --set secrets.sqlUser="${SQL_USER}" \
            --set secrets.sqlPassword="${SQL_PASSWORD}" \
            --set secrets.sqlDb="${SQL_DB}" \
            --set secrets.appDomain="${APP_DOMAIN}"