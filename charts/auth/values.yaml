replicaCount: 2

image:
  repository: ""
  tag: ""
  pullPolicy: IfNotPresent

service:
  type: ClusterIP
  port: 5000

env:
  APP_SECRET_KEY: ""
  SQL_HOST: ""
  SQL_USER: ""
  SQL_PASSWORD: ""
  SQL_DB: ""
  APP_DOMAIN: ""

nodeSelector:
  ingress-zone: "1b"

mysql:
  enabled: true
  architecture: standalone
  replicaCount: 1
  auth:
    createDatabase: true
    existingSecret: "mysql-secrets"

  primary:
    persistence:
      enabled: true
      size: 8Gi
      storageClass: "local-storage"
      accessMode: ReadWriteOnce
    initdbScripts:
      init.sql: |
        CREATE DATABASE IF NOT EXISTS `users` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci;
        USE `users`;

        CREATE TABLE IF NOT EXISTS `accounts` (
            `user_id` INT NOT NULL AUTO_INCREMENT,
            `username` VARCHAR(100) NOT NULL,
            `password` VARCHAR(255) NOT NULL,
            `email` VARCHAR(100) NOT NULL,
            PRIMARY KEY (`user_id`)
        ) ENGINE=InnoDB DEFAULT CHARSET=utf8;

  service:
    port: 3306

resources:
  limits:
    cpu: "500m"
    memory: "512Mi"
  requests:
    cpu: "250m"
    memory: "256Mi"

networkPolicy:
  enabled: true
  allowFlaskToMysql:
    ingress:
      - from:
          - podSelector:
              matchLabels:
                app: summarize-ai-auth
        ports:
          - protocol: TCP
            port: 3306

affinity:
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
        - matchExpressions:
            - key: local-storage
              operator: In
              values:
                - "enabled"